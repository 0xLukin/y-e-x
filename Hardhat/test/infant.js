const { ethers } = require("hardhat");
describe("buySellTest", function() {
    it("buySellTest", async function() {
      console.log("start")
      const [dev] = await ethers.getSigners()
      const FtokenFactory = await ethers.getContractFactory("tokenF")
      const supply = ethers.utils.parseUnits("10000", 18)
      const Ftoken = await FtokenFactory.deploy(supply,dev.address)
      await Ftoken.deployed()
      console.log("tokenF deployed")
      const AtokenFactory = await ethers.getContractFactory("tokenA")
      const Atoken = await AtokenFactory.deploy(supply)
      await Atoken.deployed()
      console.log("tokenA deployed")
      const vaultFactory = await ethers.getContractFactory("vault")
      const vault = await vaultFactory.deploy(dev.address)
      await vault.deployed()
      console.log("vault deployed")
      const buySellFactory = await ethers.getContractFactory("buySell")
      const buySell = await buySellFactory.deploy(1,Ftoken.address,dev.address,vault.address)
      await buySell.deployed()
      console.log("buySell deployed")
      await Ftoken.setMint(vault.address)
      console.log("setFMint deployed")
      await Atoken.setMint(dev.address)
      console.log("setAMint deployed")
      const number100 = ethers.utils.parseUnits("100", 18)
      await Atoken.mint(dev.address,number100)
      await Atoken.approve(vault.address,number100)
      console.log("minted and approved success")  
      await vault.setSubscribe(buySell.address)
      await vault.setFAddr(Ftoken.address)
      console.log("vault set success")
      const number50 = ethers.utils.parseUnits("50", 18)
      await buySell.deposit(Atoken.address,number50)
      console.log("deposit success")  
      await buySell.withdraw(Atoken.address,number50)
      const balance = await Atoken.balanceOf(dev.address)
      console.log("withdraw success,balance is",balance) 
  })
})