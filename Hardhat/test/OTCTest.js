const { ethers } = require("hardhat");
describe("OTCTest", function() {
    it("OTCTest", async function() {
      console.log("start")
      const [dev] = await ethers.getSigners()
      const FtokenFactory = await ethers.getContractFactory("F")
      const Ftoken = await FtokenFactory.deploy()
      await Ftoken.deployed()
      console.log("tokenF deployed")
      const vaultFactory = await ethers.getContractFactory("Vault")
      const vault = await vaultFactory.deploy(Ftoken.address)
      await vault.deployed()
      console.log("vault deployed")
      await Ftoken.setVault(vault.address)
      console.log("Ftoken set vault success")
      const OTCFactory = await ethers.getContractFactory("OTC")
      const OTC = await OTCFactory.deploy(vault.address)
      await OTC.deployed()
      console.log("OTC deployed")
      const AtokenFactory = await ethers.getContractFactory("A")
      const Atoken = await AtokenFactory.deploy()
      await Atoken.deployed()
      const poolsFactory = await ethers.getContractFactory("Pools")
      const pool = await poolsFactory.deploy(vault.address,Ftoken.address)
      await pool.deployed()
      console.log("pool deployed")  
      await pool.createLiquidity(Atoken.address,number10,number10,10)
      console.log("init success")  
      await pool.swap()
      await OTC.openSubscribe()
      await OTC.openRedeem()
      console.log("open subscribe and redeem")
      const number100 = ethers.utils.parseUnits("100", 18)
      await Atoken.mint(dev.address,number100)
      await Atoken.mint(vault.address,number100)
      await Atoken.approve(OTC.address,number100)
      await Ftoken.approve(OTC.address,number100)
      console.log("minted and approved success")  
      await vault.authorizePermit(Atoken.address,OTC.address)
      await vault.authorizePermit(Ftoken.address,OTC.address)
      console.log("authorize success")  
      const number50 = ethers.utils.parseUnits("50", 18)
      await OTC.subscribe(Atoken.address,number50)
      console.log("subscribe success")  
      await OTC.redeem(Atoken.address,number50)
      const balance = await Atoken.balanceOf(dev.address)
      console.log("redeem success,balance is",balance) 
      const BtokenFactory = await ethers.getContractFactory("B")
      const Btoken = await BtokenFactory.deploy()
      await Btoken.deployed()
      const purchaseFactory = await ethers.getContractFactory("Purchase")
      const purchase = await purchaseFactory.deploy(vault.address)
      await purchase.deployed()
      console.log("purchase deployed")
      await vault.authorizePermit(Btoken.address,OTC.address)
      await vault.authorizePermit(Btoken.address,pool.address)
      await vault.authorizePermit(Atoken.address,pool.address)
      await vault.authorizePermit(Btoken.address,purchase.address)
      await vault.authorizePermit(Atoken.address,purchase.address)
      await vault.authorizePermit(Ftoken.address,purchase.address)
      const number10 = ethers.utils.parseUnits("10", 18)
      await purchase.purchaseByF(Btoken.address,number10)
      console.log("purchasebyF success")
      await purchase.purchaseByToken(Btoken.address,Atoken.address,number10)
      console.log("purchasebytoken success")
  })
})